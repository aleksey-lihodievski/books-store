{"version":3,"file":"static/js/993.c783715d.chunk.js","mappings":"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","sources":["components/Body/index.ts","components/Container/index.ts","components/Image/index.ts","components/PageTitle/index.ts","components/Price/index.ts","components/Title/components/TitleComponent.ts","components/Title/index.tsx","constants/media/index.ts","constants/links/index.ts","containers/Navigation/components/DesktopNavigation.ts","containers/Navigation/components/MobileMenuIcon.ts","containers/Navigation/components/MobileNavigation.ts","containers/Navigation/components/NavBar.ts","containers/Navigation/components/Links/components/LinksContainer.ts","components/Link/index.ts","containers/Navigation/components/Links/components/NavBarLink.ts","containers/Navigation/components/Links/index.tsx","containers/Navigation/components/MobileMenu/MobileMenuComponent.ts","containers/Navigation/components/MobileMenu/index.tsx","containers/Navigation/index.tsx","containers/Header/components/HeaderComponent.ts","containers/Header/index.tsx","hooks/media/index.tsx","hooks/mount/index.ts","hooks/redux/index.ts","components/Chip/index.tsx","components/Scroller/index.ts","containers/ChipsArray/components/ChipsArea.ts","containers/ChipsArray/index.tsx","components/Card/components/CardBottom.ts","components/Card/components/CardComponent.ts","components/Card/components/CardHeader.ts","components/Card/components/CardLink.ts","components/Card/index.tsx","components/ProductsList/index.ts","redux/selectors/products/index.ts","pages/Products/components/Categories.ts","pages/Products/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\nconst Body = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 2rem 0;\n  min-height: 100vh;\n  justify-content: stretch;\n  background-color: ${(props) =>\n    (props.theme as Theme).palette.gray.background};\n`;\n\nexport default Body;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  box-sizing: border-box;\n  max-width: 1170px;\n  padding: 0 16px;\n  margin: 0 auto;\n`;\n\nexport default Container;\n","import styled, { css } from 'styled-components';\n\ninterface IImageProps {\n  border?: number;\n}\n\nconst Image = styled.img<IImageProps>`\n  max-width: 100%;\n  height: auto;\n  ${(props) =>\n    props.border &&\n    css`\n      width: ${props.border}px;\n      height: ${props.border}px;\n      object-fit: contain;\n    `}\n`;\n\nexport default Image;\n","import styled, { css } from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\ninterface ITitleProps {\n  simple?: boolean;\n}\n\nconst Title = styled.h1<ITitleProps>`\n  margin: 0;\n  padding: 0;\n  font-style: italic;\n  font-size: 3em;\n  font-weight: 500;\n  text-align: center;\n  color: ${(props) => (props.theme as Theme).palette.common.white};\n  ${(props) =>\n    props.simple &&\n    css`\n      color: ${(props) => (props.theme as Theme).palette.common.black};\n      text-align: left;\n    `}\n`;\n\nexport default Title;\n","import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\nconst Price = styled.span`\n  margin: 0;\n  padding: 0;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${(props) => (props.theme as Theme).palette.secondary.main};\n`;\n\nexport default Price;\n","import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\ninterface ITitleComponentProps {\n  level?: number;\n  white?: boolean;\n}\n\nexport const TitleComponent = styled.h4<ITitleComponentProps>`\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-style: italic;\n  font-size: ${(props) => (props.level ? 1.5 + props.level / 10 : 1.5)}rem;\n  font-weight: 500;\n  color: ${(props) =>\n    props.white\n      ? (props.theme as Theme).palette.common.white\n      : (props.theme as Theme).palette.common.black};\n`;\n","import React from 'react';\n\nimport { TTitleLevels } from 'typings/title';\nimport { TitleComponent } from './components/TitleComponent';\n\ninterface ITitleProps {\n  level?: TTitleLevels;\n  white?: boolean;\n  children: React.ReactNode;\n}\n\nconst Title: React.FC<ITitleProps> = ({ level, white, children }) => {\n  return (\n    <TitleComponent white={white} level={level}>\n      {children}\n    </TitleComponent>\n  );\n};\n\nexport default Title;\n","export const desktopMedia = '(min-width: 992px)';\n\nexport const tabletMedia = '(min-width: 768px) and (max-width: 991px)';\n\nexport const mobileMedia = '(max-width: 767px)';\n","export const links = [\n  {\n    title: 'Products',\n    href: '/products',\n  },\n  {\n    title: 'Cart',\n    href: '/cart',\n  },\n];\n","import styled from 'styled-components';\n\nexport const DesktopNavigation = styled.div`\n  color: inherit;\n  font-size: 1.5rem;\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n","import styled from 'styled-components';\nimport { GiHamburgerMenu } from 'react-icons/gi';\n\nimport { Theme } from 'styles/theme';\n\nexport const MobileMenuIcon = styled(GiHamburgerMenu)`\n  position: relative;\n  cursor: pointer;\n  z-index: 2;\n  color: ${(props) => (props.theme as Theme).palette.common.white};\n  font-size: 3rem;\n  margin-left: auto;\n`;\n","import styled from 'styled-components';\n\nexport const MobileNavigation = styled.div`\n  color: inherit;\n  font-size: 1.5rem;\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n","import styled, { css } from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\ninterface INavbarProps {\n  scrolled?: boolean;\n}\n\nexport const NavBar = styled.nav<INavbarProps>`\n  display: flex;\n  flex: 1;\n  padding: 1rem 0;\n  color: #fff;\n  background: unset;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 2;\n\n  ${(props) =>\n    props.scrolled &&\n    css`\n      color: ${(props.theme as Theme).palette.common.black};\n      background: ${(props) => (props.theme as Theme).palette.gray.dark};\n    `}\n`;\n","import styled, { css } from 'styled-components';\n\ninterface ILinksContainerProps {\n  vertical?: boolean;\n  alignRight?: boolean;\n}\n\nexport const LinksContainer = styled.div<ILinksContainerProps>`\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: row;\n  flex: 1;\n  ${(props) =>\n    props.alignRight &&\n    css`\n      justify-content: flex-end;\n    `}\n  ${(props) =>\n    props.vertical &&\n    css`\n      flex-direction: column;\n      justify-content: center;\n      text-align: center;\n    `}\n`;\n","import styled from 'styled-components';\nimport { NavLink as RouterLink } from 'react-router-dom';\n\nimport { Theme } from 'styles/theme';\n\nexport const Link = styled(RouterLink)`\n  position: relative;\n  color: ${(props) => (props.theme as Theme).palette.common.white};\n  text-decoration: none;\n\n  &::after {\n    content: '';\n    position: absolute;\n    z-index: 2;\n    top: 100%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 0;\n    height: 3px;\n    opacity: 1;\n    /* background: ${(props) => props.theme.palette.primary.light}; */\n    background: ${(props) => (props.theme as Theme).palette.gray.main};\n    transition: all 0.3s ease;\n  }\n\n  &:active {\n    &::after {\n      background: ${(props) => (props.theme as Theme).palette.gray.dark};\n    }\n  }\n\n  &.active {\n    &::after {\n      background: ${(props) => (props.theme as Theme).palette.primary.main};\n    }\n    &:active {\n      &::after {\n        background: ${(props) => (props.theme as Theme).palette.primary.dark};\n      }\n    }\n  }\n\n  &:hover {\n    &::after {\n      width: 100%;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nimport { Link } from 'components/Link';\nimport { Theme } from 'styles/theme';\n\nexport const NavBarLink = styled(Link)`\n  font-size: 1.5rem;\n  padding: 0.5rem 1rem;\n\n  &.active {\n    color: ${(props) => (props.theme as Theme).palette.primary.main};\n  }\n`;\n","import React from 'react';\n\nimport { ILink } from 'typings/link';\nimport { LinksContainer } from './components/LinksContainer';\nimport { NavBarLink } from './components/NavBarLink';\n\ninterface ILinksProps {\n  links: ILink[];\n  vertical?: boolean;\n  alignRight?: boolean;\n}\n\nconst Links: React.FC<ILinksProps> = ({ links, vertical, alignRight }) => {\n  return (\n    <LinksContainer vertical={vertical} alignRight={alignRight}>\n      {links.map((link) => (\n        <NavBarLink key={link.href} to={link.href} end>\n          {link.title}\n        </NavBarLink>\n      ))}\n    </LinksContainer>\n  );\n};\n\nexport default React.memo(Links);\n","import styled, { keyframes, css } from 'styled-components';\n\ninterface IMobileMenuProps {\n  open: boolean;\n}\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n`;\n\nexport const MobileMenuComponent = styled.div<IMobileMenuProps>`\n  opacity: ${(props) => (props.open ? 1 : 0)};\n  animation: ${(props) => (props.open ? fadeIn : fadeOut)} 0.1s linear;\n\n  display: flex;\n  position: fixed;\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 1rem;\n\n  ${(props) =>\n    props.open &&\n    css`\n      pointer-events: auto;\n    `}\n`;\n","import React from 'react';\nimport { ILink } from 'typings/link';\nimport Links from '../Links';\nimport { MobileMenuComponent } from './MobileMenuComponent';\n\ninterface IMobileNavigationProps {\n  links: ILink[];\n  open: boolean;\n  onCloseMobileMenu: () => void;\n}\n\nconst MobileMenu: React.FC<IMobileNavigationProps> = ({\n  open,\n  onCloseMobileMenu,\n  links,\n}) => {\n  return (\n    <MobileMenuComponent open={open} onClick={onCloseMobileMenu}>\n      <Links links={links} vertical />\n    </MobileMenuComponent>\n  );\n};\n\nexport default MobileMenu;\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { useMediaQuery } from 'hooks/media';\nimport Container from 'components/Container';\nimport Title from 'components/Title';\nimport { desktopMedia } from 'constants/media';\nimport { links } from 'constants/links';\nimport { DesktopNavigation } from './components/DesktopNavigation';\nimport { MobileMenuIcon } from './components/MobileMenuIcon';\nimport { MobileNavigation } from './components/MobileNavigation';\nimport { NavBar } from './components/NavBar';\nimport Links from './components/Links';\nimport MobileMenu from './components/MobileMenu';\nimport { useMountTransition } from 'hooks/mount';\n\ninterface NavigationProps {\n  title?: string;\n  hasImage?: boolean;\n}\n\nconst Navigation: React.FC<NavigationProps> = ({ title, hasImage }) => {\n  const [scrolled, setScrolled] = useState(false || !hasImage);\n\n  const isDesktop = useMediaQuery(desktopMedia);\n  const [mobileNavModal, setMobileNavModal] = useState(false);\n  const isAnimated = useMountTransition(!!mobileNavModal, 300);\n\n  const toggleMobileNav = useCallback(() => {\n    setMobileNavModal((open) => !open);\n  }, []);\n\n  const onCloseMobileNav = useCallback(() => {\n    setMobileNavModal(false);\n  }, []);\n\n  useEffect(() => {\n    const handleChangeNavbar = () => {\n      if (window.scrollY >= 100) setScrolled(true);\n      else setScrolled(false || !hasImage);\n    };\n\n    window.addEventListener('scroll', handleChangeNavbar);\n\n    return () => window.removeEventListener('scroll', handleChangeNavbar);\n  }, [setScrolled, hasImage]);\n\n  return (\n    <NavBar scrolled={scrolled}>\n      <Container>\n        {isDesktop ? (\n          <DesktopNavigation>\n            {title && !hasImage && <Title white>{title}</Title>}\n            <Links links={links} alignRight />\n          </DesktopNavigation>\n        ) : (\n          <>\n            {(mobileNavModal || isAnimated) && (\n              <MobileMenu\n                open={mobileNavModal}\n                links={links}\n                onCloseMobileMenu={onCloseMobileNav}\n              />\n            )}\n            <MobileNavigation>\n              {title && !hasImage && <Title white>{title}</Title>}\n              <MobileMenuIcon onClick={toggleMobileNav} />\n            </MobileNavigation>\n          </>\n        )}\n      </Container>\n    </NavBar>\n  );\n};\n\nexport default React.memo(Navigation);\n","import styled, { css } from 'styled-components';\n\ninterface IHeaderTagProps {\n  image?: string;\n}\n\nexport const HeaderComponent = styled.header<IHeaderTagProps>`\n  ${(props) =>\n    props.image\n      ? css`\n          position: relative;\n          padding: 50px 0;\n\n          &:before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-image: linear-gradient(\n                rgba(0, 0, 0, 0.3),\n                rgba(0, 0, 0, 0.3)\n              ),\n              url(${props.image});\n            background-size: cover;\n            background-position: center;\n          }\n          @media screen and (max-width: 992px) {\n            background-size: cover;\n            background-position: center;\n            background-attachment: scroll;\n          }\n        `\n      : css`\n          padding-top: 4rem;\n        `}\n`;\n","import React from 'react';\n\nimport Container from 'components/Container';\nimport Navigation from 'containers/Navigation';\nimport PageTitle from 'components/PageTitle';\nimport { HeaderComponent } from './components/HeaderComponent';\n\ninterface IHeaderProps {\n  title?: string;\n  image?: string;\n}\n\nconst Header: React.FC<IHeaderProps> = ({ title, image }) => {\n  return (\n    <HeaderComponent image={image}>\n      <Navigation title={title} hasImage={Boolean(image)} />\n      <Container>\n        {title && image && (\n          <PageTitle simple={!Boolean(image)}>{title}</PageTitle>\n        )}\n      </Container>\n    </HeaderComponent>\n  );\n};\n\nexport default React.memo(Header);\n","import { useState, useEffect } from 'react';\n\nexport const useMediaQuery = (query: string) => {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => setMatches(media.matches);\n    window.addEventListener('resize', listener);\n    return () => window.removeEventListener('resize', listener);\n  }, [matches, query]);\n\n  return matches;\n};\n","import { MutableRefObject, useEffect, useRef, useState } from 'react';\n\nexport const useMountTransition = (\n  isMounted: boolean,\n  unmountDelay: number,\n) => {\n  const [hasTransitionedIn, setHasTransitionedIn] = useState(false);\n  let timeoutId: MutableRefObject<NodeJS.Timeout | null> = useRef(null);\n\n  useEffect(() => {\n    if (isMounted && !hasTransitionedIn) {\n      setHasTransitionedIn(true);\n    } else if (!isMounted && hasTransitionedIn) {\n      timeoutId.current = setTimeout(\n        () => setHasTransitionedIn(false),\n        unmountDelay,\n      );\n    }\n    return () => {\n      clearTimeout(timeoutId.current as NodeJS.Timeout);\n    };\n  }, [unmountDelay, isMounted, hasTransitionedIn]);\n\n  return hasTransitionedIn;\n};\n","import { useDispatch, TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from 'redux/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled, { css } from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\ninterface IChipProps {\n  primary?: boolean;\n  checked?: boolean;\n}\n\nconst ChipBody = styled.div<IChipProps>`\n  display: inline-block;\n  white-space: nowrap;\n  column-gap: 0.3rem;\n  padding: 0.3rem 1rem;\n  border-radius: 99999px;\n  background: transparent;\n  border: 2px solid;\n  color: ${(props) => (props.theme as Theme).palette.gray.dark};\n  font-size: 1.5rem;\n  cursor: pointer;\n  transition: 0.2s all ease;\n\n  ${(props) =>\n    props.checked &&\n    css`\n      background: ${(props.theme as Theme).palette.gray.main};\n    `}\n\n  ${(props) =>\n    props.checked &&\n    props.primary &&\n    css`\n      background: ${(props.theme as Theme).palette.primary.main};\n    `}\n\n  &:hover {\n    background: ${(props) => (props.theme as Theme).palette.gray.light};\n  }\n  &:active {\n    background: ${(props) => (props.theme as Theme).palette.gray.main};\n  }\n\n  ${(props) =>\n    props.primary &&\n    css`\n      color: ${(props) => (props.theme as Theme).palette.primary.dark};\n\n      &:hover {\n        background: ${(props) => (props.theme as Theme).palette.primary.light};\n      }\n      &:active {\n        background: ${(props) => (props.theme as Theme).palette.primary.main};\n      }\n    `}\n`;\n\nexport default ChipBody;\n","import styled from 'styled-components';\n\nconst Scroller = styled.div`\n  display: flex;\n  overflow-x: scroll;\n`;\n\nexport default Scroller;\n","import styled from 'styled-components';\n\nexport const ChipsArea = styled.div`\n  display: flex;\n  column-gap: 0.5rem;\n`;\n","import React from 'react';\n\nimport Chip from 'components/Chip';\nimport Scroller from 'components/Scroller';\nimport { ChipsArea } from './components/ChipsArea';\n\ninterface IChipsArrayProps<T extends string> {\n  value: number;\n  primary?: boolean;\n  options: T[];\n  onChange: (value: number) => void;\n}\n\nconst ChipsArray = <T extends string>({\n  value,\n  primary,\n  options,\n  onChange,\n}: IChipsArrayProps<T>): React.ReactElement => {\n  return (\n    <Scroller>\n      <ChipsArea>\n        {options.map((option, index) => (\n          <Chip\n            checked={index === value}\n            key={index}\n            primary={primary}\n            onClick={() => onChange(index)}\n          >\n            {option}\n          </Chip>\n        ))}\n      </ChipsArea>\n    </Scroller>\n  );\n};\n\nexport default React.memo(ChipsArray);\n","import styled from 'styled-components';\n\nexport const CardBottom = styled.div`\n  font-weight: bold;\n  margin-bottom: 10px;\n  max-width: 100%;\n  color: #333;\n  word-wrap: break-word;\n`;\n","import styled from 'styled-components';\n\nexport const CardComponent = styled.article`\n  position: relative;\n  border-radius: 0.3rem;\n  text-decoration: none;\n  position: relative;\n  top: 0;\n  padding: 20px;\n  background: #fff;\n  transition: all 0.3s ease;\n  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CardHeader = styled.h3`\n  font-weight: bold;\n  margin-bottom: 10px;\n  max-width: 100%;\n  color: #333;\n  word-wrap: break-word;\n`;\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const CardLink = styled(Link)`\n  text-decoration: none;\n`;\n","import React from 'react';\n\nimport Image from 'components/Image';\nimport Price from 'components/Price';\nimport { IProduct } from 'typings/entities/products';\nimport { CardBottom } from './components/CardBottom';\nimport { CardComponent } from './components/CardComponent';\nimport { CardHeader } from './components/CardHeader';\nimport { CardLink } from './components/CardLink';\n\ninterface CardProps {\n  product: IProduct;\n  onClick: (value: IProduct) => void;\n}\n\nconst Card: React.FC<CardProps> = ({ product, onClick }) => {\n  const { id, image, title, price } = product;\n\n  return (\n    <CardLink to={`./${id}`}>\n      <CardComponent>\n        <Image src={image} alt={product.title} />\n        <CardBottom>\n          <CardHeader>{title}</CardHeader>\n          <Price>{price}$</Price>\n        </CardBottom>\n      </CardComponent>\n    </CardLink>\n  );\n};\n\nexport default React.memo(Card);\n","import styled from 'styled-components';\n\nconst ProductsList = styled.div`\n  display: grid;\n  align-items: flex-start;\n  column-gap: 1rem;\n  row-gap: 1rem;\n  grid-template-columns: repeat(4, minmax(200px, 1fr));\n\n  @media (max-width: 992px) {\n    grid-template-columns: repeat(3, minmax(200px, 1fr));\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  /* @media (max-width: 568px) {\n    grid-template-columns: minmax(200px, 1fr);\n  } */\n  /* grid-auto-rows: minmax(0, 7vh); */\n`;\n\nexport default ProductsList;\n","import { RootState } from 'redux/reducers';\nimport { IProductsState } from 'redux/reducers/products';\nimport { TCategory } from 'typings/entities/categories';\n\nexport const selectProducts = (state: RootState): IProductsState =>\n  state.products;\n\nexport const selectCategories = (state: RootState): TCategory[] =>\n  state.products.categories;\n","import styled from 'styled-components';\n\nexport const Categories = styled.div`\n  margin-bottom: 2rem;\n`;\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport ChipsArray from 'containers/ChipsArray';\nimport Header from 'containers/Header';\nimport Card from 'components/Card';\nimport ProductsList from 'components/ProductsList';\nimport Container from 'components/Container';\nimport Body from 'components/Body';\nimport ShopHeader from 'assets/headers/shop-header.jpg';\nimport {\n  fetchCategories,\n  fetchProducts,\n  setCategory,\n} from 'redux/reducers/products';\nimport { selectCategories, selectProducts } from 'redux/selectors/products';\nimport { addToCart } from 'redux/reducers/cart';\nimport { useAppDispatch } from 'hooks/redux';\nimport { IProduct } from 'typings/entities/products';\nimport { Categories } from './components/Categories';\n\nconst Products: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const products = useSelector(selectProducts);\n  const { filter, filterDirection } = products;\n\n  const categories = useSelector(selectCategories);\n\n  const chipValue = useMemo(\n    () => categories.findIndex((category) => category === filter),\n    [filter, categories],\n  );\n\n  const setFilter = useCallback(\n    (taskIdx: number) => {\n      dispatch(setCategory(categories[taskIdx]));\n    },\n    [dispatch, categories],\n  );\n\n  const onAddToCart = useCallback(\n    (product: IProduct) => {\n      dispatch(addToCart(product));\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch, filter, filterDirection]);\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Header title='Products' image={ShopHeader} />\n      <Body>\n        <Container>\n          <Categories>\n            <ChipsArray\n              primary\n              value={chipValue}\n              options={categories}\n              onChange={setFilter}\n            />\n          </Categories>\n          <ProductsList>\n            {products.allProducts.map((product) => (\n              <Card key={product.id} onClick={onAddToCart} product={product} />\n            ))}\n          </ProductsList>\n        </Container>\n      </Body>\n    </>\n  );\n};\n\nexport default React.memo(Products);\n"],"names":["Body","styled","props","theme","palette","gray","background","Container","Image","border","css","Title","common","white","simple","black","Price","secondary","main","TitleComponent","level","children","desktopMedia","tabletMedia","mobileMedia","links","title","href","DesktopNavigation","MobileMenuIcon","GiHamburgerMenu","MobileNavigation","NavBar","scrolled","dark","LinksContainer","alignRight","vertical","Link","RouterLink","primary","light","NavBarLink","Links","map","link","to","end","React","fadeIn","keyframes","fadeOut","MobileMenuComponent","open","onCloseMobileMenu","onClick","Navigation","hasImage","useState","setScrolled","isDesktop","useMediaQuery","mobileNavModal","setMobileNavModal","isAnimated","useMountTransition","toggleMobileNav","useCallback","onCloseMobileNav","useEffect","handleChangeNavbar","window","scrollY","addEventListener","removeEventListener","HeaderComponent","image","Header","Boolean","PageTitle","query","matches","setMatches","media","matchMedia","listener","isMounted","unmountDelay","hasTransitionedIn","setHasTransitionedIn","timeoutId","useRef","current","setTimeout","clearTimeout","useAppDispatch","useDispatch","checked","ChipsArea","ChipsArray","value","options","onChange","option","index","Chip","CardBottom","CardComponent","CardHeader","CardLink","Card","product","id","price","src","alt","selectProducts","state","products","selectCategories","categories","Categories","Products","dispatch","useSelector","filter","filterDirection","chipValue","useMemo","findIndex","category","setFilter","taskIdx","setCategory","onAddToCart","addToCart","fetchProducts","fetchCategories","ShopHeader","allProducts"],"sourceRoot":""}