{"version":3,"file":"static/js/372.afe994ca.chunk.js","mappings":"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","sources":["containers/FormInformationBlock/components/InformationBlock.ts","containers/FormInformationBlock/components/TitleWrapper.ts","containers/FormInformationBlock/index.tsx","containers/Modal/components/ModalFooter/ModalFooterComponent.ts","containers/Modal/components/ModalFooter/index.tsx","containers/Modal/components/ModalHeader/ModalHeaderComponent.ts","containers/Modal/components/ModalHeader/index.tsx","containers/Modal/components/ModalContent.ts","helpers/styles/index.ts","containers/Modal/components/ModalBody.ts","containers/Modal/components/ModalOverlay.ts","constants/modals/index.ts","containers/Modal/index.tsx","constants/inputs/index.ts","helpers/Input/index.ts","components/Input/components/ErrorMessage.ts","components/Input/components/InputBase.ts","components/Input/components/InputComponent.ts","components/Input/components/InputLabel.ts","components/Input/components/InputMainArea.ts","components/Input/index.tsx","components/FixedButton/index.ts","constants/orders/index.ts","validations/order/index.ts","pages/Checkout/components/Columns/index.ts","pages/Checkout/components/OrderForm/index.tsx","pages/Checkout/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\nexport const InformationBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  align-self: center;\n  justify-content: flex-start;\n  padding: 0.7rem 0.5rem;\n  border-radius: 0.5rem;\n  background-color: ${(props) => (props.theme as Theme).palette.common.white};\n  box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.1);\n`;\n","import styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n`;\n","import React from 'react';\n\nimport Title from 'components/Title';\nimport { InformationBlock } from './components/InformationBlock';\nimport { TitleWrapper } from './components/TitleWrapper';\n\ninterface IFormInformationBlockProps {\n  title: string;\n  children: React.ReactNode;\n}\n\nconst FormInformationBlock: React.FC<IFormInformationBlockProps> = ({\n  title,\n  children,\n}) => {\n  return (\n    <InformationBlock>\n      <TitleWrapper>\n        <Title>{title}</Title>\n      </TitleWrapper>\n      {children}\n    </InformationBlock>\n  );\n};\n\nexport default FormInformationBlock;\n","import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\nexport const ModalFooterComponent = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  column-gap: 0.3rem;\n  align-items: center;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 1rem 1rem 0.3rem 1rem;\n  background-color: ${(props) =>\n    (props.theme as Theme).palette.gray.background};\n  color: ${(props) => (props.theme as Theme).palette.gray.dark};\n  font-size: 1.5rem;\n`;\n","import React from 'react';\n\nimport Button from 'components/Button';\nimport { ModalFooterComponent } from './ModalFooterComponent';\n\ninterface IModalHeaderProps {\n  onSubmit: () => void;\n  onCancel: () => void;\n  submitText?: string;\n  cancelText?: string;\n  submitDisabled?: boolean;\n  cancelDisabled?: boolean;\n  children?: React.ReactNode;\n}\n\nconst ModalFooter: React.FC<IModalHeaderProps> = ({\n  onSubmit,\n  onCancel,\n  submitText,\n  cancelText,\n  submitDisabled,\n  cancelDisabled,\n  children,\n}) => {\n  return (\n    <ModalFooterComponent>\n      {children || (\n        <>\n          <Button disabled={cancelDisabled} onClick={onCancel} dense>\n            {cancelText}\n          </Button>\n          <Button primary disabled={submitDisabled} onClick={onSubmit} dense>\n            {submitText}\n          </Button>\n        </>\n      )}\n    </ModalFooterComponent>\n  );\n};\n\nexport default React.memo(ModalFooter);\n","import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\nexport const ModalHeaderComponent = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 0.5rem 1rem;\n  margin-bottom: 1rem;\n  border-bottom: 1px solid\n    ${(props) => (props.theme as Theme).palette.gray.main};\n  background-color: ${(props) =>\n    (props.theme as Theme).palette.gray.background};\n  color: ${(props) => (props.theme as Theme).palette.gray.dark};\n  font-size: 1.5rem;\n`;\n","import React from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nimport Title from 'components/Title';\nimport Button from 'components/Button';\nimport { ModalHeaderComponent } from './ModalHeaderComponent';\n\ninterface IModalHeaderProps {\n  title?: string;\n  onCancel: () => void;\n}\n\nconst ModalHeader: React.FC<IModalHeaderProps> = ({ title, onCancel }) => {\n  return (\n    <ModalHeaderComponent>\n      <Title>{title}</Title>\n      <Button onClick={onCancel} dense>\n        <AiOutlineClose />\n      </Button>\n    </ModalHeaderComponent>\n  );\n};\n\nexport default React.memo(ModalHeader);\n","import styled from 'styled-components';\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex: 1;\n  width: 100%;\n  flex-direction: column;\n  padding: 1rem 0.5rem;\n  box-sizing: border-box;\n`;\n","export const stringOrNumberCSSProp = (value: string | number) => {\n  if (typeof value === 'number') return `${value}px`;\n  return value;\n};\n","import styled, { css } from 'styled-components';\n\nimport { stringOrNumberCSSProp } from 'helpers/styles/index';\n\ninterface IModalBodyProps {\n  visible?: boolean;\n  transitionedIn?: boolean;\n  transitionTime: number;\n  minWidth?: string | number;\n  maxWidth?: string | number;\n}\n\nexport const ModalBody = styled.div<IModalBodyProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  width: 100%;\n  max-width: ${(props) =>\n    props.maxWidth\n      ? css`\n          ${stringOrNumberCSSProp(props.maxWidth)}\n        `\n      : '500px'};\n  min-width: ${(props) =>\n    props.minWidth\n      ? css`\n          ${stringOrNumberCSSProp(props.minWidth)}\n        `\n      : 'min-content'};\n  background-color: ${(props) => props.theme.palette.gray.background};\n  border-radius: 0.5rem;\n  overflow: hidden;\n  opacity: 0;\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.5);\n  transition: ${(props) => props.transitionTime}ms all ease;\n\n  ${(props) =>\n    props.transitionedIn &&\n    props.visible &&\n    css`\n      opacity: 1;\n    `}\n`;\n","import styled, { css } from 'styled-components';\n\ninterface IModalOverlayProps {\n  visible?: boolean;\n  transitionedIn?: boolean;\n  transitionTime: number;\n}\n\nexport const ModalOverlay = styled.div<IModalOverlayProps>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  padding: 0 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  background-color: transparent;\n  transition: ${(props) => props.transitionTime}ms all ease;\n\n  ${(props) =>\n    props.transitionedIn &&\n    props.visible &&\n    css`\n      background-color: rgba(0, 0, 0, 0.5);\n    `}\n\n  z-index: 10;\n`;\n","export const modalsRoot = document.getElementById('modals');\n","import { useMountTransition } from 'hooks/mount';\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport ModalFooter from './components/ModalFooter';\n\nimport ModalHeader from './components/ModalHeader';\nimport { ModalContent } from './components/ModalContent';\nimport { ModalBody } from './components/ModalBody';\nimport { ModalOverlay } from './components/ModalOverlay';\nimport { modalsRoot } from 'constants/modals';\n\ninterface IModalProps {\n  children?: React.ReactNode;\n  visible?: boolean;\n  className?: string;\n  title?: string;\n  minWidth?: string | number;\n  maxWidth?: string | number;\n  footer?: React.ReactNode;\n  transitionTime?: number;\n  onSubmit: () => void;\n  onCancel: () => void;\n  submitText?: string;\n  cancelText?: string;\n  submitDisabled?: boolean;\n  cancelDisabled?: boolean;\n}\n\nconst Modal: React.FC<IModalProps> = ({\n  visible,\n  className,\n  title,\n  minWidth,\n  maxWidth,\n  transitionTime,\n  footer,\n  onSubmit,\n  onCancel,\n  submitText,\n  cancelText,\n  submitDisabled,\n  cancelDisabled,\n  children,\n}) => {\n  const isAnimated = useMountTransition(!!visible, transitionTime as number);\n\n  useEffect(() => {\n    if (visible) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  }, [visible]);\n\n  if (visible || isAnimated)\n    return ReactDOM.createPortal(\n      <ModalOverlay\n        onClick={onCancel}\n        className={className}\n        transitionTime={transitionTime as number}\n        transitionedIn={isAnimated}\n        visible={visible}\n      >\n        <ModalBody\n          onClick={(e) => e.stopPropagation()}\n          transitionTime={transitionTime as number}\n          transitionedIn={isAnimated}\n          visible={visible}\n          minWidth={minWidth}\n          maxWidth={maxWidth}\n        >\n          <ModalHeader onCancel={onCancel} title={title} />\n          {children && <ModalContent>{children}</ModalContent>}\n          {footer || (\n            <ModalFooter\n              onSubmit={onSubmit}\n              onCancel={onCancel}\n              submitText={submitText}\n              cancelText={cancelText}\n              submitDisabled={submitDisabled}\n              cancelDisabled={cancelDisabled}\n            />\n          )}\n        </ModalBody>\n      </ModalOverlay>,\n      modalsRoot as HTMLElement,\n    );\n\n  return null;\n};\n\nModal.defaultProps = {\n  visible: false,\n  title: '',\n  transitionTime: 300,\n  submitText: 'OK',\n  cancelText: 'Cancel',\n  submitDisabled: false,\n  cancelDisabled: false,\n};\n\nexport default React.memo(Modal);\n","export const deniedNumbers = ['e', 'E', '+', '-'];\n","import React from 'react';\n\nimport { deniedNumbers } from 'constants/inputs';\n\nexport const blockInvalidChar: React.KeyboardEventHandler<HTMLInputElement> = (\n  e,\n) => deniedNumbers.includes(e.key) && e.preventDefault();\n","import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\nexport const ErrorMessage = styled.span`\n  color: ${(props) => (props.theme as Theme).palette.error.main};\n  font-size: 1rem;\n  font-weight: bold;\n`;\n","import styled, { css } from 'styled-components';\nimport { Theme } from 'styles/theme';\n\ninterface IInputBaseProps {\n  error?: boolean;\n  disabled?: boolean;\n}\n\nexport const InputBase = styled.input<IInputBaseProps>`\n  display: block;\n  width: 100%;\n  padding: 1.8rem 0.5rem 0.4rem 0.5rem;\n  font-size: inherit;\n  border: 0;\n  box-sizing: border-box;\n  background: none;\n  outline: none;\n  appearance: none;\n\n  ${(props) =>\n    props.disabled &&\n    css`\n      border: 1px solid ${(props.theme as Theme).palette.gray.light};\n    `}\n\n  border-bottom: 3px solid\n    ${(props) => (props.theme as Theme).palette.gray.main};\n\n  ${(props) =>\n    props.error &&\n    css`\n      border-bottom: 3px solid ${(props.theme as Theme).palette.error.main};\n    `}\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    /* display: none; <- Crashes Chrome on hover */\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &[type='number'] {\n    -moz-appearance: textfield;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const InputComponent = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  font-size: 1.2rem;\n\n  border-radius: 5px;\n  cursor: text;\n`;\n","import styled, { css } from 'styled-components';\n\ninterface IInputLabelProps {\n  labelActive?: boolean;\n}\n\nexport const InputLabel = styled.label<IInputLabelProps>`\n  display: block;\n  padding: 0.4rem 0.5rem;\n  font-size: inherit;\n  transform-origin: left top;\n  position: absolute;\n  left: 0px;\n  bottom: 0px;\n  cursor: text;\n  transition: 0.2s all ease;\n\n  ${(props) =>\n    props.labelActive &&\n    css`\n      bottom: 0.8rem;\n      transform: scale(0.7);\n    `}\n`;\n","import styled from 'styled-components';\n\nexport const InputMainArea = styled.div`\n  position: relative;\n`;\n","import React, { HTMLInputTypeAttribute, useId, useMemo } from 'react';\n\nimport { blockInvalidChar } from 'helpers/Input';\nimport { ErrorMessage } from './components/ErrorMessage';\nimport { InputBase } from './components/InputBase';\nimport { InputComponent } from './components/InputComponent';\nimport { InputLabel } from './components/InputLabel';\nimport { InputMainArea } from './components/InputMainArea';\n\ninterface IInputProps<T> {\n  name?: string;\n  type: HTMLInputTypeAttribute;\n  label?: string;\n  defaultValue?: T;\n  value?: T;\n  placeholder?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n  required?: boolean;\n  error?: string | boolean;\n}\n\nconst Input = <T extends string | number>({\n  placeholder,\n  onChange,\n  onBlur,\n  onFocus,\n  disabled,\n  name,\n  type,\n  label,\n  defaultValue,\n  value,\n  error,\n  required,\n}: IInputProps<T>) => {\n  const id = useId();\n\n  const inputHasValue = useMemo(() => {\n    const result = value ?? false;\n    if (typeof result === 'number') {\n      return true;\n    }\n    return !!result;\n  }, [value]);\n\n  return (\n    <InputComponent>\n      <InputMainArea>\n        <InputLabel\n          labelActive={inputHasValue || Boolean(placeholder)}\n          htmlFor={id}\n        >\n          {label}\n          {required && '*'}\n        </InputLabel>\n        <InputBase\n          id={id}\n          name={name}\n          type={type}\n          value={value}\n          defaultValue={defaultValue}\n          placeholder={placeholder}\n          onChange={onChange}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          onKeyDown={type === 'number' ? blockInvalidChar : undefined}\n          error={!!error}\n          disabled={disabled}\n        />\n      </InputMainArea>\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n    </InputComponent>\n  );\n};\n\nexport default React.memo(Input);\n","import styled, { css, keyframes } from 'styled-components';\n\nimport { stringOrNumberCSSProp } from 'helpers/styles/index';\nimport { Theme } from 'styles/theme';\n\ninterface IFixedButtonProps {\n  primary?: boolean;\n  secondary?: boolean;\n  disabled?: boolean;\n  top?: string | number;\n  left?: string | number;\n  right?: string | number;\n  bottom?: string | number;\n}\n\nconst FixedButtonImpulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }`;\n\nexport const FixedButton = styled.button<IFixedButtonProps>`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: 0.2s all ease;\n  background: transparent;\n  border: 2px solid;\n  font-size: 1.7rem;\n  color: ${(props) => (props.theme as Theme).palette.gray.dark};\n  ${(props) =>\n    props.top &&\n    css`\n      top: ${stringOrNumberCSSProp(props.top)};\n    `};\n  ${(props) =>\n    props.left &&\n    css`\n      left: ${stringOrNumberCSSProp(props.left)};\n    `};\n  ${(props) =>\n    props.right &&\n    css`\n      right: ${stringOrNumberCSSProp(props.right)};\n    `};\n  ${(props) =>\n    props.bottom &&\n    css`\n      bottom: ${stringOrNumberCSSProp(props.bottom)};\n    `};\n  width: fit-content;\n  aspect-ratio: 1/1;\n  border-radius: 50%;\n  padding: 1.5rem;\n\n  ${(props) =>\n    !props.disabled &&\n    css`\n      animation: ${FixedButtonImpulse} 1s ease-in-out infinite;\n      cursor: pointer;\n      &:hover {\n        color: ${(props) => (props.theme as Theme).palette.gray.main};\n      }\n      &:active {\n        color: ${(props) => (props.theme as Theme).palette.gray.light};\n      }\n    `}\n\n  ${(props) =>\n    props.secondary &&\n    css`\n      color: ${(props) => (props.theme as Theme).palette.common.white};\n    `}\n\n  ${(props) =>\n    props.secondary &&\n    !props.disabled &&\n    css`\n      background: ${(props) => (props.theme as Theme).palette.secondary.main};\n\n      &:hover {\n        background: ${(props) =>\n          (props.theme as Theme).palette.secondary.light};\n        color: ${(props) => (props.theme as Theme).palette.secondary.dark};\n      }\n      &:active {\n        background: transparent;\n        color: ${(props) => (props.theme as Theme).palette.secondary.main};\n      }\n    `}\n\n  ${(props) =>\n    props.primary &&\n    css`\n      color: ${(props) => (props.theme as Theme).palette.common.white};\n    `}\n\n  ${(props) =>\n    props.primary &&\n    !props.disabled &&\n    css`\n      background: ${(props) => (props.theme as Theme).palette.primary.main};\n\n      &:hover {\n        background: ${(props) => (props.theme as Theme).palette.primary.light};\n        color: ${(props) => (props.theme as Theme).palette.primary.dark};\n      }\n      &:active {\n        background: transparent;\n        color: ${(props) => (props.theme as Theme).palette.primary.main};\n      }\n    `}\n\n    &:disabled {\n    cursor: default;\n    filter: brightness(0.85);\n    background: ${(props) => (props.theme as Theme).palette.gray.colors[0]};\n    ${(props) =>\n      props.primary &&\n      css`\n        color: ${(props) => (props.theme as Theme).palette.primary.light};\n      `}\n\n    ${(props) =>\n      props.secondary &&\n      css`\n        color: ${(props) => (props.theme as Theme).palette.secondary.light};\n      `}\n  }\n`;\n","export const initialOrder = {\n  firstName: '',\n  lastName: '',\n  phone: '',\n  email: '',\n  country: '',\n  city: '',\n  street: '',\n  apartment: '',\n  postCode: '',\n  cardNumber: '',\n  cardHolder: '',\n  expiryDate: '',\n  cvcCode: '',\n};\n","import * as yup from 'yup';\n\nexport const orderSchema = yup\n  .object()\n  .shape({\n    firstName: yup.string().trim().required('First Name is required'),\n    lastName: yup.string().trim().required('Last Name is required'),\n    phone: yup.string().trim().required('Number is required'),\n    email: yup.string().required('Email is required'),\n    country: yup.string().trim().required('Country is required'),\n    city: yup.string().trim().required('City is required'),\n    street: yup.string().trim().required('Street is required'),\n    apartment: yup.string().trim().required('Apartment is required'),\n    postCode: yup.number().required('Post code is required'),\n    cardNumber: yup.number().required(\"Card's number is required\"),\n    cardHolder: yup.string().required(\"Holder's name is required\"),\n    expiryDate: yup.string().required('Expiry date is required'),\n    cvcCode: yup\n      .number()\n      .min(100, 'Wrong CVC')\n      .max(999, 'Wrong CVC')\n      .required('CVC is required'),\n  })\n  .required();\n","import styled from 'styled-components';\n\ninterface IColumnsProps {\n  quantity: number;\n}\n\nexport const Columns = styled.div<IColumnsProps>`\n  display: grid;\n  flex: 1;\n  grid-template-columns: repeat(${(props) => props.quantity}, 1fr);\n  grid-template-rows: auto;\n  column-gap: 1.5rem;\n  row-gap: 1.5rem;\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { BsBag } from 'react-icons/bs';\n\nimport FormInformationBlock from 'containers/FormInformationBlock';\nimport Modal from 'containers/Modal';\nimport Input from 'components/Input';\nimport { FixedButton } from 'components/FixedButton';\nimport { initialOrder } from 'constants/orders';\nimport { desktopMedia, mobileMedia, tabletMedia } from 'constants/media';\nimport { orderSchema } from 'validations/order';\nimport { IOrder } from 'typings/order';\nimport { Columns } from '../Columns';\nimport { useMediaQuery } from 'hooks/media';\n\ninterface IOrderFormProps {\n  handleSubmit: (values: IOrder) => void;\n}\n\nconst OrderForm: React.FC<IOrderFormProps> = ({ handleSubmit }) => {\n  const [columnsQuantity, setColumnsQuantity] = useState(1);\n\n  const isDesktop = useMediaQuery(desktopMedia);\n  const isTablet = useMediaQuery(tabletMedia);\n  const isMobile = useMediaQuery(mobileMedia);\n\n  const [visible, setVisible] = useState(false);\n\n  const openModal = useCallback(() => {\n    setVisible(true);\n  }, []);\n\n  const closeModal = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  useEffect(() => {\n    if (isDesktop) {\n      setColumnsQuantity(3);\n    }\n    if (isTablet) {\n      setColumnsQuantity(2);\n    }\n    if (isMobile) {\n      setColumnsQuantity(1);\n    }\n  }, [isDesktop, isTablet, isMobile]);\n\n  const onSubmit = useCallback(\n    async (\n      values: IOrder,\n      { setSubmitting, setErrors, resetForm }: FormikHelpers<IOrder>,\n    ) => {\n      handleSubmit(values);\n      closeModal();\n      setSubmitting(false);\n      setErrors({});\n      resetForm();\n    },\n    [handleSubmit, closeModal],\n  );\n\n  return (\n    <Formik\n      validationSchema={orderSchema}\n      initialValues={initialOrder}\n      onSubmit={onSubmit}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit: handleSubmitForm,\n      }) => (\n        <Form onSubmit={handleSubmitForm}>\n          <Columns quantity={columnsQuantity}>\n            <FormInformationBlock title='Personal information'>\n              <Input\n                type='text'\n                name='firstName'\n                label='First Name'\n                value={values.firstName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.firstName && errors.firstName}\n                required\n              />\n              <Input\n                type='text'\n                name='lastName'\n                label='Last Name'\n                value={values.lastName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.lastName && errors.lastName}\n                required\n              />\n              <Input\n                type='text'\n                name='phone'\n                label='Phone number'\n                value={values.phone}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.phone && errors.phone}\n                required\n              />\n              <Input\n                type='text'\n                name='email'\n                label='Email'\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.email && errors.email}\n                required\n              />\n            </FormInformationBlock>\n\n            <FormInformationBlock title='Shipping'>\n              <Input\n                type='text'\n                name='country'\n                label='Country'\n                value={values.country}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.country && errors.country}\n                required\n              />\n              <Input\n                type='text'\n                name='city'\n                label='City'\n                value={values.city}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.city && errors.city}\n                required\n              />\n              <Input\n                type='text'\n                name='street'\n                label='Street'\n                value={values.street}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.street && errors.street}\n                required\n              />\n              <Input\n                type='text'\n                name='apartment'\n                label='Apartment'\n                value={values.apartment}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.apartment && errors.apartment}\n                required\n              />\n              <Input\n                type='number'\n                name='postCode'\n                label='Post code'\n                value={values.postCode}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.postCode && errors.postCode}\n                required\n              />\n            </FormInformationBlock>\n\n            <FormInformationBlock title='Payment details'>\n              <Input\n                type='number'\n                name='cardNumber'\n                label='Card number'\n                value={values.cardNumber}\n                placeholder='0000 0000 0000 0000'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.cardNumber && errors.cardNumber}\n                required\n              />\n              <Input\n                type='text'\n                name='cardHolder'\n                label='Card holder'\n                value={values.cardHolder}\n                placeholder='John Doe'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.cardHolder && errors.cardHolder}\n                required\n              />\n              <Input\n                type='text'\n                name='expiryDate'\n                label='Expiry date'\n                value={values.expiryDate}\n                placeholder='MM/YY'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.expiryDate && errors.expiryDate}\n                required\n              />\n              <Input\n                type='number'\n                name='cvcCode'\n                label='CVC code'\n                value={values.cvcCode}\n                placeholder='123'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.cvcCode && errors.cvcCode}\n                required\n              />\n            </FormInformationBlock>\n          </Columns>\n          <FixedButton\n            type='button'\n            primary\n            bottom='3rem'\n            right='3rem'\n            onClick={openModal}\n          >\n            <BsBag />\n          </FixedButton>\n          <Modal\n            title='Confirm the order?'\n            visible={visible}\n            onSubmit={handleSubmitForm}\n            onCancel={closeModal}\n            maxWidth='350px'\n            submitText='Yes'\n            cancelText='No'\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default OrderForm;\n","import React, { useCallback } from 'react';\n\nimport Header from 'containers/Header';\nimport Body from 'components/Body';\nimport Container from 'components/Container';\nimport OrderForm from './components/OrderForm';\nimport CheckoutHeader from 'assets/headers/checkout-header.jpg';\nimport { useAppDispatch } from 'hooks/redux';\nimport { IOrder } from 'typings/order';\nimport { buyCart } from 'redux/reducers/cart';\n\nconst Checkout: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const handleSubmit = useCallback(\n    (values: IOrder) => {\n      try {\n        dispatch(buyCart());\n      } catch (e: any) {\n        throw new Error(e.message);\n      }\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      <Header title='Checkout' image={CheckoutHeader} />\n      <Body>\n        <Container>\n          <OrderForm handleSubmit={handleSubmit} />\n        </Container>\n      </Body>\n    </>\n  );\n};\n\nexport default Checkout;\n"],"names":["InformationBlock","styled","props","theme","palette","common","white","TitleWrapper","title","children","Title","ModalFooterComponent","gray","background","dark","ModalFooter","onSubmit","onCancel","submitText","cancelText","submitDisabled","cancelDisabled","Button","disabled","onClick","dense","primary","React","ModalHeaderComponent","main","ModalHeader","ModalContent","stringOrNumberCSSProp","value","ModalBody","maxWidth","css","minWidth","transitionTime","transitionedIn","visible","ModalOverlay","modalsRoot","document","getElementById","Modal","className","footer","isAnimated","useMountTransition","useEffect","body","style","overflow","ReactDOM","e","stopPropagation","defaultProps","deniedNumbers","blockInvalidChar","includes","key","preventDefault","ErrorMessage","error","InputBase","light","InputComponent","InputLabel","labelActive","InputMainArea","Input","placeholder","onChange","onBlur","onFocus","name","type","label","defaultValue","required","id","useId","inputHasValue","useMemo","result","Boolean","htmlFor","onKeyDown","undefined","FixedButtonImpulse","keyframes","FixedButton","top","left","right","bottom","secondary","colors","initialOrder","firstName","lastName","phone","email","country","city","street","apartment","postCode","cardNumber","cardHolder","expiryDate","cvcCode","orderSchema","yup","shape","trim","min","max","Columns","quantity","handleSubmit","useState","columnsQuantity","setColumnsQuantity","isDesktop","useMediaQuery","desktopMedia","isTablet","tabletMedia","isMobile","mobileMedia","setVisible","openModal","useCallback","closeModal","values","setSubmitting","setErrors","resetForm","validationSchema","initialValues","errors","touched","handleChange","handleBlur","handleSubmitForm","dispatch","useAppDispatch","buyCart","Error","message","Header","image","CheckoutHeader","Body","Container"],"sourceRoot":""}