{"version":3,"file":"static/js/621.430d2e6e.chunk.js","mappings":"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","sources":["components/Image/index.ts","components/Paragraph/index.ts","components/Price/index.ts","containers/Table/components/Table.ts","containers/Table/components/TableBody.ts","containers/Table/components/TableCell.ts","containers/Table/components/TableRow.ts","containers/Table/components/TableFooter.ts","containers/Table/components/TableHead.ts","containers/Table/components/TableWrapper.ts","containers/Table/index.tsx","redux/selectors/cart/index.ts","components/TableCellWithImage/index.tsx","containers/ProductQuantity/components/Quantity.ts","containers/ProductQuantity/components/QuantityController.ts","containers/ProductQuantity/index.tsx","pages/Cart/components/Footer/FooterActions.ts","pages/Cart/components/Footer/FooterComponent.ts","pages/Cart/components/Footer/index.tsx","pages/Cart/index.tsx","constants/cart/index.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\ninterface IImageProps {\n  border?: number;\n}\n\nconst Image = styled.img<IImageProps>`\n  max-width: 100%;\n  height: auto;\n  ${(props) =>\n    props.border &&\n    css`\n      width: ${props.border}px;\n      height: ${props.border}px;\n      object-fit: contain;\n    `}\n`;\n\nexport default Image;\n","import styled, { css } from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\ninterface IParagraphProps {\n  primary?: boolean;\n  secondary?: boolean;\n}\n\nconst Paragraph = styled.p<IParagraphProps>`\n  font-size: 1.2rem;\n  line-height: 1.2;\n  margin: 0;\n  padding: 0;\n  color: ${(props) => (props.theme as Theme).palette.common.black};\n\n  ${(props) =>\n    props.secondary &&\n    css`\n      color: ${(props.theme as Theme).palette.secondary.main};\n    `}\n\n  ${(props) =>\n    props.primary &&\n    css`\n      color: ${(props.theme as Theme).palette.primary.main};\n    `}\n`;\n\nexport default Paragraph;\n","import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\nconst Price = styled.span`\n  margin: 0;\n  padding: 0;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${(props) => (props.theme as Theme).palette.secondary.main};\n`;\n\nexport default Price;\n","import styled from 'styled-components';\n\nexport const Table = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-width: min-content;\n`;\n","import styled from 'styled-components';\n\nexport const TableBody = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components';\n\nexport const TableCell = styled.div`\n  display: flex;\n  font-size: 1.1rem;\n  align-items: center;\n  column-gap: 1rem;\n`;\n","import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme/index';\n\nexport const TableRow = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  padding: 1rem 3rem;\n  border-bottom: 1px solid\n    ${(props) => (props.theme as Theme).palette.gray.main};\n`;\n","import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme';\nimport { TableRow } from './TableRow';\n\nconst TableFooter = styled(TableRow)`\n  background-color: ${(props) =>\n    (props.theme as Theme).palette.gray.extraLight};\n`;\n\nexport default TableFooter;\n","import styled from 'styled-components';\n\nimport { TableRow } from './TableRow';\n\nexport const TableHead = styled(TableRow)``;\n","import styled from 'styled-components';\n\nexport const TableWrapper = styled.div`\n  overflow-x: scroll;\n`;\n","import React from \"react\";\n\nimport { Column } from \"typings/column\";\nimport { IProduct } from \"typings/entities/products\";\nimport { Table } from \"./components/Table\";\nimport { TableBody } from \"./components/TableBody\";\nimport { TableCell } from \"./components/TableCell\";\nimport TableFooter from \"./components/TableFooter\";\nimport { TableHead } from \"./components/TableHead\";\nimport { TableRow } from \"./components/TableRow\";\nimport { TableWrapper } from \"./components/TableWrapper\";\n\ntype ITableListProps<T> = {\n  rows: T[];\n  columns: Column<T>[];\n  footer?: React.ReactNode;\n};\n\nconst TableList = <T extends IProduct>({\n  rows,\n  columns,\n  footer,\n}: ITableListProps<T>): React.ReactElement => {\n  return (\n    <TableWrapper>\n      <Table>\n        <TableHead>\n          {columns.map((column) => (\n            <TableCell\n              key={column.id}\n              style={{\n                minWidth: column.minWidth,\n                flex: column.flex,\n                justifyContent: column.align,\n              }}\n            >\n              {column.label}\n            </TableCell>\n          ))}\n        </TableHead>\n        <TableBody>\n          {rows.map((row: T) => (\n            <TableRow key={row.id}>\n              {columns.map((column) => (\n                <TableCell\n                  key={`${column.id}-${row.id}`}\n                  style={{\n                    minWidth: column.minWidth,\n                    flex: column.flex,\n                    justifyContent: column.align,\n                  }}\n                >\n                  {column.renderCell\n                    ? column.renderCell(row)\n                    : String(row[column.id as keyof IProduct])}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n        <TableFooter>{footer}</TableFooter>\n      </Table>\n    </TableWrapper>\n  );\n};\n\nexport default React.memo(TableList);\n","import { RootState } from 'redux/reducers';\nimport { ICartState } from 'redux/reducers/cart';\n\nexport const selectCart = (state: RootState): ICartState => state.cart;\n","import React from 'react';\nimport Image from 'components/Image';\n\ninterface ITableCellWithImageProps {\n  image: string;\n  children: string;\n}\n\nconst TableCellWithImage: React.FC<ITableCellWithImageProps> = ({\n  image,\n  children,\n}) => {\n  return (\n    <>\n      <Image src={image} border={80} alt={children} />\n      <span>{children}</span>\n    </>\n  );\n};\n\nexport default TableCellWithImage;\n","import styled from 'styled-components';\n\nexport const Quantity = styled.span`\n  font-size: 1.2rem;\n`;\n","import styled from 'styled-components';\n\nexport const QuantityController = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 0.5rem;\n`;\n","import React from 'react';\nimport { AiOutlineMinus, AiOutlinePlus } from 'react-icons/ai';\n\nimport Button from 'components/Button';\nimport { Quantity } from './components/Quantity';\nimport { QuantityController } from './components/QuantityController';\n\ninterface IProductQuantityProps {\n  increase: () => void;\n  decrease: () => void;\n  quantity: number;\n}\n\nconst ProductQuantity: React.FC<IProductQuantityProps> = ({\n  increase,\n  decrease,\n  quantity,\n}) => {\n  return (\n    <QuantityController>\n      <Button dense onClick={decrease}>\n        <AiOutlineMinus />\n      </Button>\n      <Quantity>{quantity}</Quantity>\n      <Button dense onClick={increase}>\n        <AiOutlinePlus />\n      </Button>\n    </QuantityController>\n  );\n};\n\nexport default ProductQuantity;\n","import styled from 'styled-components';\n\nexport const FooterActions = styled.div`\n  display: flex;\n  column-gap: 0.5rem;\n`;\n","import styled from 'styled-components';\n\nexport const FooterComponent = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import React from 'react';\n\nimport Paragraph from 'components/Paragraph';\nimport Price from 'components/Price';\nimport Button from 'components/Button';\nimport { FooterActions } from './FooterActions';\nimport { FooterComponent } from './FooterComponent';\n\ninterface ITableFooterProps {\n  totalCost: number;\n  ableToCheckout: boolean;\n  onOrder?: () => void;\n}\n\nconst TableFooter: React.FC<ITableFooterProps> = ({\n  totalCost,\n  ableToCheckout,\n  onOrder,\n}) => {\n  return (\n    <FooterComponent>\n      <Paragraph>\n        Total cost <Price>{totalCost}$</Price>\n      </Paragraph>\n      <FooterActions>\n        <Button href='/products'>Back shoping</Button>\n        <Button href='/checkout' disabled={!ableToCheckout} primary>\n          Order\n        </Button>\n      </FooterActions>\n    </FooterComponent>\n  );\n};\n\nexport default TableFooter;\n","import React, { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Header from 'containers/Header';\nimport CartHeader from 'assets/headers/cart-header.jpg';\nimport Body from 'components/Body';\nimport Table from 'containers/Table';\nimport { selectCart } from 'redux/selectors/cart';\nimport { decreaseQuantity, increaseQuantity } from 'redux/reducers/cart';\nimport { useAppDispatch } from 'hooks/redux';\nimport Container from 'components/Container';\nimport { cartColumns } from 'constants/cart';\nimport Footer from './components/Footer';\n\nconst CartPage: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const cart = useSelector(selectCart);\n  const totalCost = useMemo(\n    () =>\n      cart.usersCart.reduce((acc, item) => acc + item.price * item.quantity, 0),\n    [cart],\n  );\n  const ableToCheckout = useMemo(() => Boolean(cart.usersCart.length), [cart]);\n\n  const handleIncreaseQuantity = useCallback(\n    (id: number) => {\n      dispatch(increaseQuantity(id));\n    },\n    [dispatch],\n  );\n\n  const handleDecreaseQuantity = useCallback(\n    (id: number) => {\n      dispatch(decreaseQuantity(id));\n    },\n    [dispatch],\n  );\n\n  const columns = cartColumns({\n    increaseQuantity: handleIncreaseQuantity,\n    decreaseQuantity: handleDecreaseQuantity,\n  });\n\n  return (\n    <>\n      <Header title='My cart' image={CartHeader} />\n      <Body>\n        <Container>\n          <Table\n            columns={columns}\n            rows={cart.usersCart}\n            footer={\n              <Footer totalCost={totalCost} ableToCheckout={ableToCheckout} />\n            }\n          />\n        </Container>\n      </Body>\n    </>\n  );\n};\n\nexport default CartPage;\n","import TableCellWithImage from 'components/TableCellWithImage';\nimport ProductQuantity from 'containers/ProductQuantity';\nimport { Column } from 'typings/column';\nimport { ICartProduct } from 'typings/entities/products';\n\ninterface CartColumnsProps {\n  increaseQuantity: (id: number) => void;\n  decreaseQuantity: (id: number) => void;\n}\n\nexport const cartColumns = ({\n  increaseQuantity,\n  decreaseQuantity,\n}: CartColumnsProps): Column<ICartProduct>[] => [\n  {\n    id: 'title',\n    label: 'Product',\n    align: 'left',\n    flex: 3,\n    minWidth: 200,\n    renderCell: (row) => {\n      return (\n        <TableCellWithImage image={row.image}>{row.title}</TableCellWithImage>\n      );\n    },\n  },\n  {\n    id: 'price',\n    label: 'Price',\n    align: 'center',\n    flex: 1,\n    minWidth: 100,\n    renderCell: (row) => {\n      return <>{row.price}$</>;\n    },\n  },\n  {\n    id: 'quantity',\n    label: 'Quantity',\n    align: 'center',\n    flex: 1,\n    minWidth: 100,\n    renderCell: (row) => {\n      const increase = () => {\n        increaseQuantity(row.id);\n      };\n      const decrease = () => {\n        decreaseQuantity(row.id);\n      };\n\n      return (\n        <ProductQuantity\n          increase={increase}\n          decrease={decrease}\n          quantity={row.quantity}\n        />\n      );\n    },\n  },\n  {\n    id: 'total',\n    label: 'Position total',\n    align: 'center',\n    flex: 1,\n    minWidth: 150,\n    renderCell: (row) => {\n      return <>{row.quantity * row.price}$</>;\n    },\n  },\n];\n"],"names":["Image","styled","props","border","css","Paragraph","theme","palette","common","black","secondary","main","primary","Price","Table","TableBody","TableCell","TableRow","gray","extraLight","TableHead","TableWrapper","TableList","rows","columns","footer","map","column","style","minWidth","flex","justifyContent","align","label","id","row","renderCell","String","React","selectCart","state","cart","image","children","src","alt","Quantity","QuantityController","increase","decrease","quantity","Button","dense","onClick","FooterActions","FooterComponent","totalCost","ableToCheckout","onOrder","href","disabled","dispatch","useAppDispatch","useSelector","useMemo","usersCart","reduce","acc","item","price","Boolean","length","increaseQuantity","decreaseQuantity","title","cartColumns","useCallback","Header","CartHeader","Body","Container","Footer"],"sourceRoot":""}