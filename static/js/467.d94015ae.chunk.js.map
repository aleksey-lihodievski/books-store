{"version":3,"file":"static/js/467.d94015ae.chunk.js","mappings":"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","sources":["components/Image/index.ts","components/Paragraph/index.ts","components/Price/index.ts","containers/ProductInfo/components/Skeleton/ImageSkeleton.ts","containers/ProductInfo/components/Skeleton/SkeletonDescription.ts","containers/ProductInfo/components/Skeleton/TextLine.ts","containers/ProductInfo/components/ProductText.ts","containers/ProductInfo/components/Layout.ts","containers/ProductInfo/components/Skeleton/index.tsx","containers/ProductInfo/components/ImageWrapper.ts","containers/ProductInfo/components/ProductDescription.ts","containers/ProductInfo/components/ProductImage.ts","containers/ProductInfo/components/ProductPrice.ts","containers/ProductInfo/components/ProductTitle.ts","containers/ProductInfo/index.tsx","pages/Product/index.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\ninterface IImageProps {\n  border?: number;\n}\n\nconst Image = styled.img<IImageProps>`\n  max-width: 100%;\n  height: auto;\n  ${(props) =>\n    props.border &&\n    css`\n      width: ${props.border}px;\n      height: ${props.border}px;\n      object-fit: contain;\n    `}\n`;\n\nexport default Image;\n","import styled, { css } from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\ninterface IParagraphProps {\n  primary?: boolean;\n  secondary?: boolean;\n}\n\nconst Paragraph = styled.p<IParagraphProps>`\n  font-size: 1.2rem;\n  line-height: 1.2;\n  margin: 0;\n  padding: 0;\n  color: ${(props) => (props.theme as Theme).palette.common.black};\n\n  ${(props) =>\n    props.secondary &&\n    css`\n      color: ${(props.theme as Theme).palette.secondary.main};\n    `}\n\n  ${(props) =>\n    props.primary &&\n    css`\n      color: ${(props.theme as Theme).palette.primary.main};\n    `}\n`;\n\nexport default Paragraph;\n","import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\nconst Price = styled.span`\n  margin: 0;\n  padding: 0;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${(props) => (props.theme as Theme).palette.secondary.main};\n`;\n\nexport default Price;\n","import styled from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\nexport const ImageSkeleton = styled.div`\n  display: flex;\n  flex: 1;\n  min-height: 300px;\n  background: ${(props) => (props.theme as Theme).palette.gray.light};\n  border: 5px solid ${(props) => (props.theme as Theme).palette.gray.dark};\n  margin-bottom: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const SkeletonDescription = styled.div`\n  margin-bottom: 2rem;\n`;\n","import styled, { css } from 'styled-components';\n\nimport { Theme } from 'styles/theme';\n\ninterface TextLineProps {\n  length?: number;\n  main?: boolean;\n  primary?: boolean;\n  secondary?: boolean;\n}\n\nexport const TextLine = styled.div<TextLineProps>`\n  display: flex;\n  margin: 0.5rem 0;\n  border-radius: 999px;\n  flex: 1;\n  width: 100%;\n  min-height: 15px;\n  background: ${(props) => (props.theme as Theme).palette.gray.light};\n\n  ${(props) =>\n    props.main &&\n    css`\n      min-height: 2rem;\n      background: ${(props) => (props.theme as Theme).palette.gray.dark};\n      margin-bottom: 1.5rem;\n    `}\n\n  ${(props) =>\n    props.primary &&\n    css`\n      background: ${(props.theme as Theme).palette.primary.main};\n    `}\n\n  ${(props) =>\n    props.secondary &&\n    css`\n      background: ${(props.theme as Theme).palette.secondary.main};\n      margin-bottom: 1rem;\n    `}\n\n  ${(props) =>\n    props.length &&\n    css`\n      flex: 0;\n      max-width: ${props.length}px;\n    `}\n`;\n","import styled from 'styled-components';\n\nexport const ProductText = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: grid;\n  padding-top: 2rem;\n  column-gap: 4rem;\n  grid-template-columns: 1fr 2fr;\n\n  @media (max-width: 992px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import React from 'react';\n\nimport Container from 'components/Container';\nimport { ImageSkeleton } from './ImageSkeleton';\nimport { SkeletonDescription } from './SkeletonDescription';\nimport { TextLine } from './TextLine';\nimport { ProductText } from '../ProductText';\nimport { Layout } from '../Layout';\n\nconst ProductInfoSkeleton: React.FC = () => {\n  return (\n    <Container>\n      <Layout>\n        <ImageSkeleton />\n        <ProductText>\n          <TextLine main length={400} />\n          <TextLine secondary length={50} />\n\n          <SkeletonDescription>\n            <TextLine />\n            <TextLine />\n            <TextLine />\n            <TextLine />\n            <TextLine length={200} />\n          </SkeletonDescription>\n        </ProductText>\n      </Layout>\n    </Container>\n  );\n};\n\nexport default React.memo(ProductInfoSkeleton);\n","import styled from \"styled-components\";\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 992px) {\n    padding: 0.5rem 3rem;\n  }\n`;\n","import styled from 'styled-components';\n\nimport Paragraph from 'components/Paragraph';\n\nexport const ProductDescription = styled(Paragraph)`\n  margin-bottom: 2rem;\n`;\n","import styled from 'styled-components';\n\nimport Image from 'components/Image';\nimport { Theme } from 'styles/theme';\n\nexport const ProductImage = styled(Image)`\n  border: 5px solid ${(props) => (props.theme as Theme).palette.gray.dark};\n`;\n","import styled from 'styled-components';\n\nimport Price from 'components/Price';\n\nexport const ProductPrice = styled(Price)`\n  margin-bottom: 1rem;\n`;\n","import styled from 'styled-components';\n\nimport PageTitle from 'components/PageTitle';\n\nexport const ProductTitle = styled(PageTitle)`\n  margin-bottom: 1.5rem;\n`;\n","import React from 'react';\n\nimport Container from 'components/Container';\nimport Skeleton from './components/Skeleton';\nimport { useAppDispatch } from 'hooks/redux';\nimport { IProduct } from 'typings/entities/products';\nimport { addToCart } from 'redux/reducers/cart';\nimport Button from 'components/Button';\nimport { ImageWrapper } from './components/ImageWrapper';\nimport { Layout } from './components/Layout';\nimport { ProductDescription } from './components/ProductDescription';\nimport { ProductImage } from './components/ProductImage';\nimport { ProductPrice } from './components/ProductPrice';\nimport { ProductText } from './components/ProductText';\nimport { ProductTitle } from './components/ProductTitle';\n\ninterface IProductInfoProps {\n  product: IProduct | null;\n}\n\nconst ProductInfo: React.FC<IProductInfoProps> = ({ product }) => {\n  const dispatch = useAppDispatch();\n\n  const addProductToCart = () => {\n    if (product) {\n      dispatch(addToCart(product));\n    }\n  };\n\n  return (\n    <Container>\n      {product ? (\n        <Layout>\n          <ImageWrapper>\n            <ProductImage src={product.image} alt={product.title} />\n          </ImageWrapper>\n          <ProductText>\n            <ProductTitle simple>{product.title}</ProductTitle>\n            <ProductPrice>{product.price}$</ProductPrice>\n            <ProductDescription>{product.description}</ProductDescription>\n            <div>\n              <Button onClick={addProductToCart}>Add to cart</Button>\n            </div>\n          </ProductText>\n        </Layout>\n      ) : (\n        <Skeleton />\n      )}\n    </Container>\n  );\n};\n\nexport default React.memo(ProductInfo);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Body from 'components/Body';\nimport Header from 'containers/Header';\nimport ProductInfo from 'containers/ProductInfo';\nimport { IProduct } from 'typings/entities/products';\nimport { getProduct } from 'api/products';\n\nconst Product: React.FC = () => {\n  const { productId } = useParams();\n\n  const [product, setProduct] = useState<IProduct | null>(null);\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      const response = await getProduct(Number(productId));\n      setProduct(response);\n    };\n\n    fetchProduct();\n  }, [productId]);\n\n  return (\n    <>\n      <Header />\n      <Body>\n        <ProductInfo product={product} />\n      </Body>\n    </>\n  );\n};\n\nexport default React.memo(Product);\n"],"names":["Image","styled","props","border","css","Paragraph","theme","palette","common","black","secondary","main","primary","Price","ImageSkeleton","gray","light","dark","SkeletonDescription","TextLine","length","ProductText","Layout","ProductInfoSkeleton","Container","React","ImageWrapper","ProductDescription","ProductImage","ProductPrice","ProductTitle","PageTitle","ProductInfo","product","dispatch","useAppDispatch","src","image","alt","title","simple","price","description","Button","onClick","addToCart","Skeleton","Product","productId","useParams","useState","setProduct","useEffect","fetchProduct","getProduct","Number","response","Header","Body"],"sourceRoot":""}